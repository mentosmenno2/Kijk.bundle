VIDEO_URL = "http://embed.kijk.nl/api/video/"
VIDEO_URL_AFTER = "?id=kijkapp"
VIDEOFILE_URL = "https://vod-bc-prod-1.sbscdn.nl/"

HTTP_HEADERS = {
	'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/602.3.12 (KHTML, like Gecko) Version/10.0.2 Safari/602.3.12'
}

####################################################################################################
def MetadataObjectForURL(url):
	try:
		json_obj = JSON.ObjectFromURL(getUrl(url), headers=HTTP_HEADERS, cacheTime=0)["metadata"]
	except:
		raise Ex.MediaNotAvailable

	try:
		title = json_obj["title"]
	except:
		title = ''

	try:
		seasonString = json_obj["comscore"]["sbs_season"]
		episodeString = json_obj["comscore"]["sbs_episode"]
		season = int(seasonString)
		episode = int(episodeString)
	except:
		seasonString = ''
		episodeString = ''
		season = 1
		episode = 1

	thumb = Resource.ContentsOfURLWithFallback(json_obj["thumb"], '')
	art = Resource.ContentsOfURLWithFallback(json_obj["poster"], '')

	try:
		duration = int(json_obj["duration"])*1000
	except:
		duration = 0

	return EpisodeObject(
		title = title,
		thumb = thumb,
		art = art,
		season = season,
		duration = duration
	)

	####################################################################################################
def MediaObjectsForURL(url):
	return [
		MediaObject(
			parts = [
				PartObject(key=Callback(PlayVideo, url=url, url=url))
			],
			audio_channels = 2,
			optimized_for_streaming = True
		)
	]

####################################################################################################
@indirect
def PlayVideo(url, **kwargs):
	try:
		json_obj = JSON.ObjectFromURL(getUrl(url), headers=HTTP_HEADERS, cacheTime=0)
	except:
		raise Ex.MediaNotAvailable

	try:
		videoUrl = json_obj["playlist"]
		return IndirectResponse(VideoClipObject, key=videoUrl)
	except:
		raise Ex.MediaNotAvailable

####################################################################################################
def getUrl(url):
	newUrl = url
	if VIDEO_URL not in newUrl:
		newUrl = VIDEO_URL+newUrl
	if VIDEO_URL_AFTER not in newUrl:
		newUrl = newUrl+VIDEO_URL_AFTER
	return newUrl

####################################################################################################
